- name: Setup development environment
  hosts: localhost
  become: yes
  tasks:
    # --- Microsoft Repository Cleanup and Setup (Ubuntu only) ---
    - name: Remove all Microsoft repo files from sources.list.d
      shell: |
        grep -l 'packages.microsoft.com' /etc/apt/sources.list.d/* 2>/dev/null || true
      register: ms_repo_files_shell
      changed_when: false

    - name: Delete conflicting Microsoft repo files
      file:
        path: "{{ item }}"
        state: absent
      loop: "{{ ms_repo_files_shell.stdout_lines }}"
      when: ms_repo_files_shell.stdout != ""

    - name: Remove Microsoft repo from /etc/apt/sources.list if present
      lineinfile:
        path: /etc/apt/sources.list
        regexp: '^.*packages.microsoft.com.*$'
        state: absent

    - name: Remove old Microsoft keyring if present
      file:
        path: /usr/share/keyrings/microsoft.gpg
        state: absent

    - name: Add Microsoft GPG key
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present

    - name: Add VSCode repository
      apt_repository:
        repo: deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main
        filename: vscode
        state: present

    - name: Install VSCode
      apt:
        name: code
        state: latest

    - name: Add GitHub CLI GPG key
      apt_key:
        url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
        state: present

    - name: Add GitHub CLI repository
      apt_repository:
        repo: deb [arch=amd64] https://cli.github.com/packages stable main
        state: present
        filename: github-cli

    - name: Install GitHub CLI
      apt:
        name: gh
        state: present

    - name: Download Miniconda installer
      get_url:
        url: https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
        dest: /tmp/miniconda.sh
        mode: '0755'

    - name: Remove existing Miniconda installation if it exists
      file:
        path: /opt/miniconda
        state: absent
        force: yes

    - name: Install Miniconda
      command: /tmp/miniconda.sh -b -p /opt/miniconda

    - name: Initialize Conda
      shell: /opt/miniconda/bin/conda init

    - name: Install PostgreSQL
      apt:
        name: postgresql
        state: present

    - name: Start PostgreSQL service
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Add DBeaver GPG key
      apt_key:
        url: https://dbeaver.io/debs/dbeaver.gpg.key
        state: present

    - name: Add DBeaver repository
      apt_repository:
        repo: deb https://dbeaver.io/debs/dbeaver-ce /
        state: present
        filename: dbeaver

    - name: Install DBeaver
      apt:
        name: dbeaver-ce
        state: present

    - name: Install Node.js
      apt:
        name: nodejs
        state: present

    - name: Install npm
      apt:
        name: npm
        state: present

    - name: Install Node-RED globally
      npm:
        name: node-red
        global: yes

    - name: Enable Node-RED to start on boot (systemd)
      shell: |
        sudo npm install -g --unsafe-perm node-red
        sudo bash -c 'cat <<EOF > /etc/systemd/system/node-red.service
        [Unit]
        Description=Node-RED
        After=network.target

        [Service]
        ExecStart=/usr/bin/env node-red-pi --max-old-space-size=256
        Restart=on-failure
        User={{ ansible_user_id }}
        Group={{ ansible_user_gid }}
        Environment="NODE_OPTIONS=--max_old_space_size=256"

        [Install]
        WantedBy=multi-user.target
        EOF'
        sudo systemctl daemon-reload
        sudo systemctl enable node-red
        sudo systemctl start node-red
      args:
        executable: /bin/bash

    - name: Upgrade all packages to the latest version
      apt:
        upgrade: dist